( ( whitespace cut 1 stash ) ( string? ) doWhile reverse ) collect fn

( . #nl . ) .ln fn

( start assign
  start ( 1 + ) 
        ( j assign j @ chartype ( Number = ;1 j ) & ) doWhile
  end assign
  start end substr ) readInt fn

( start assign
  start ( 1 + ) 
        ( j assign j @ chartype ( Number = Other = ;1 j ) or ) doWhile
  end assign
  start end substr ) readSym fn

( start assign
  start ( 1 + ) 
        ( j assign j @ chartype ( Quote != ;1 j ) or ) doWhile
  end assign
  start 1 + end substr ) readQuote fn

( len 1 >>| ;1 ) len* fn

( ( ( ( #nl #space #tab ) in ) ( ;1 White )
    ( ( #0 >= #9 <= ) & )      ( ;1 Number )
    ( #" = )                   ( ;1 Quote )
    ( ( #paropn #parcls ) in ) ( ;1 Spechar )
                               ( ;1 Other ) ) match ) chartype fn

args 0 @ load 
          nothing = ( missing . #space . argument: . #space . filename .ln 1 exit ) ?
          len n assign
          0 
          ( i assign
            i @ chartype 
              ( Number  ( ;1 i readInt clone 2 stash len* i + )
                Spechar ( ;1 i @ 1 stash i 1 + )
                Quote   ( ;1 i readQuote clone 2 stash len* 2 + i + )
                White   ( ;1 i 1 + )
                        ( ;1 i readSym clone 2 stash len* i + ) ) match )
          ( n < ) doWhile ;1 ;1 reverse .ln ;
